{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ConnectionTest(){const[result,setResult]=useState('');const[loading,setLoading]=useState(false);const testConnection=async()=>{setLoading(true);setResult('Testing...');try{console.log('Testing connection to backend...');const response=await fetch('http://localhost:5000/api/health');const data=await response.json();setResult(\"\\u2705 SUCCESS: Backend is running!\\n\\nResponse: \".concat(JSON.stringify(data,null,2)));console.log('Backend connection successful:',data);}catch(error){setResult(\"\\u274C FAILED: \".concat(error.message,\"\\n\\nPlease check:\\n1. Backend is running on port 5000\\n2. Run: node server.js in backend folder\\n3. No firewall blocking connection\"));console.error('Backend connection failed:',error);}finally{setLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"container mt-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:/*#__PURE__*/_jsx(\"h5\",{children:\"Backend Connection Test\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Frontend URL:\"}),\" \",window.location.origin]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Backend URL:\"}),\" http://localhost:5000\"]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:testConnection,disabled:loading,children:loading?'Testing...':'Test Backend Connection'}),result&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-3 p-3 rounded \".concat(result.includes('✅')?'bg-success text-white':'bg-danger text-white'),children:/*#__PURE__*/_jsx(\"pre\",{style:{whiteSpace:'pre-wrap'},children:result})})]})]})});}","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","ConnectionTest","result","setResult","loading","setLoading","testConnection","console","log","response","fetch","data","json","concat","JSON","stringify","error","message","className","children","window","location","origin","onClick","disabled","includes","style","whiteSpace"],"sources":["C:/Users/DEll/Pictures/gunna/frontend/src/components/ConnectionTest.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function ConnectionTest() {\r\n  const [result, setResult] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const testConnection = async () => {\r\n    setLoading(true);\r\n    setResult('Testing...');\r\n    \r\n    try {\r\n      console.log('Testing connection to backend...');\r\n      \r\n      const response = await fetch('http://localhost:5000/api/health');\r\n      const data = await response.json();\r\n      \r\n      setResult(`✅ SUCCESS: Backend is running!\\n\\nResponse: ${JSON.stringify(data, null, 2)}`);\r\n      console.log('Backend connection successful:', data);\r\n      \r\n    } catch (error) {\r\n      setResult(`❌ FAILED: ${error.message}\\n\\nPlease check:\\n1. Backend is running on port 5000\\n2. Run: node server.js in backend folder\\n3. No firewall blocking connection`);\r\n      console.error('Backend connection failed:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h5>Backend Connection Test</h5>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"mb-3\">\r\n            <p><strong>Frontend URL:</strong> {window.location.origin}</p>\r\n            <p><strong>Backend URL:</strong> http://localhost:5000</p>\r\n          </div>\r\n          \r\n          <button \r\n            className=\"btn btn-primary\"\r\n            onClick={testConnection}\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Testing...' : 'Test Backend Connection'}\r\n          </button>\r\n          \r\n          {result && (\r\n            <div className={`mt-3 p-3 rounded ${result.includes('✅') ? 'bg-success text-white' : 'bg-danger text-white'}`}>\r\n              <pre style={{ whiteSpace: 'pre-wrap' }}>{result}</pre>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,cAAe,SAAS,CAAAC,cAAcA,CAAA,CAAG,CACvC,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,KAAK,CAAC,CAE7C,KAAM,CAAAU,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjCD,UAAU,CAAC,IAAI,CAAC,CAChBF,SAAS,CAAC,YAAY,CAAC,CAEvB,GAAI,CACFI,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC,CAE/C,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,kCAAkC,CAAC,CAChE,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAElCT,SAAS,qDAAAU,MAAA,CAAgDC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAE,IAAI,CAAE,CAAC,CAAC,CAAE,CAAC,CACzFJ,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAEG,IAAI,CAAC,CAErD,CAAE,MAAOK,KAAK,CAAE,CACdb,SAAS,mBAAAU,MAAA,CAAcG,KAAK,CAACC,OAAO,uIAAqI,CAAC,CAC1KV,OAAO,CAACS,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CACpD,CAAC,OAAS,CACRX,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,mBACEP,IAAA,QAAKoB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC7BnB,KAAA,QAAKkB,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBrB,IAAA,QAAKoB,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC1BrB,IAAA,OAAAqB,QAAA,CAAI,yBAAuB,CAAI,CAAC,CAC7B,CAAC,cACNnB,KAAA,QAAKkB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBnB,KAAA,QAAKkB,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBnB,KAAA,MAAAmB,QAAA,eAAGrB,IAAA,WAAAqB,QAAA,CAAQ,eAAa,CAAQ,CAAC,IAAC,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAI,CAAC,cAC9DtB,KAAA,MAAAmB,QAAA,eAAGrB,IAAA,WAAAqB,QAAA,CAAQ,cAAY,CAAQ,CAAC,yBAAsB,EAAG,CAAC,EACvD,CAAC,cAENrB,IAAA,WACEoB,SAAS,CAAC,iBAAiB,CAC3BK,OAAO,CAAEjB,cAAe,CACxBkB,QAAQ,CAAEpB,OAAQ,CAAAe,QAAA,CAEjBf,OAAO,CAAG,YAAY,CAAG,yBAAyB,CAC7C,CAAC,CAERF,MAAM,eACLJ,IAAA,QAAKoB,SAAS,qBAAAL,MAAA,CAAsBX,MAAM,CAACuB,QAAQ,CAAC,GAAG,CAAC,CAAG,uBAAuB,CAAG,sBAAsB,CAAG,CAAAN,QAAA,cAC5GrB,IAAA,QAAK4B,KAAK,CAAE,CAAEC,UAAU,CAAE,UAAW,CAAE,CAAAR,QAAA,CAAEjB,MAAM,CAAM,CAAC,CACnD,CACN,EACE,CAAC,EACH,CAAC,CACH,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}