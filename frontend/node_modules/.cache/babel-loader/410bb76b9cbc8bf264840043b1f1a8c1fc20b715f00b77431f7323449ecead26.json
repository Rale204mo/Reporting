{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DEll\\\\Pictures\\\\gunna\\\\frontend\\\\src\\\\components\\\\ConnectionTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ConnectionTest() {\n  _s();\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(false);\n  const testConnection = async () => {\n    setLoading(true);\n    setResult('Testing...');\n    try {\n      console.log('Testing connection to backend...');\n      const response = await fetch('http://localhost:5000/api/health');\n      const data = await response.json();\n      setResult(`✅ SUCCESS: Backend is running!\\n\\nResponse: ${JSON.stringify(data, null, 2)}`);\n      console.log('Backend connection successful:', data);\n    } catch (error) {\n      setResult(`❌ FAILED: ${error.message}\\n\\nPlease check:\\n1. Backend is running on port 5000\\n2. Run: node server.js in backend folder\\n3. No firewall blocking connection`);\n      console.error('Backend connection failed:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Backend Connection Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Frontend URL:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 16\n            }, this), \" \", window.location.origin]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Backend URL:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 16\n            }, this), \" http://localhost:5000\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: testConnection,\n          disabled: loading,\n          children: loading ? 'Testing...' : 'Test Backend Connection'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mt-3 p-3 rounded ${result.includes('✅') ? 'bg-success text-white' : 'bg-danger text-white'}`,\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              whiteSpace: 'pre-wrap'\n            },\n            children: result\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(ConnectionTest, \"+f+5BVLsSkcBSMc6rpBNO90CVC0=\");\n_c = ConnectionTest;\nvar _c;\n$RefreshReg$(_c, \"ConnectionTest\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ConnectionTest","_s","result","setResult","loading","setLoading","testConnection","console","log","response","fetch","data","json","JSON","stringify","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","window","location","origin","onClick","disabled","includes","style","whiteSpace","_c","$RefreshReg$"],"sources":["C:/Users/DEll/Pictures/gunna/frontend/src/components/ConnectionTest.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function ConnectionTest() {\r\n  const [result, setResult] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const testConnection = async () => {\r\n    setLoading(true);\r\n    setResult('Testing...');\r\n    \r\n    try {\r\n      console.log('Testing connection to backend...');\r\n      \r\n      const response = await fetch('http://localhost:5000/api/health');\r\n      const data = await response.json();\r\n      \r\n      setResult(`✅ SUCCESS: Backend is running!\\n\\nResponse: ${JSON.stringify(data, null, 2)}`);\r\n      console.log('Backend connection successful:', data);\r\n      \r\n    } catch (error) {\r\n      setResult(`❌ FAILED: ${error.message}\\n\\nPlease check:\\n1. Backend is running on port 5000\\n2. Run: node server.js in backend folder\\n3. No firewall blocking connection`);\r\n      console.error('Backend connection failed:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h5>Backend Connection Test</h5>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"mb-3\">\r\n            <p><strong>Frontend URL:</strong> {window.location.origin}</p>\r\n            <p><strong>Backend URL:</strong> http://localhost:5000</p>\r\n          </div>\r\n          \r\n          <button \r\n            className=\"btn btn-primary\"\r\n            onClick={testConnection}\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Testing...' : 'Test Backend Connection'}\r\n          </button>\r\n          \r\n          {result && (\r\n            <div className={`mt-3 p-3 rounded ${result.includes('✅') ? 'bg-success text-white' : 'bg-danger text-white'}`}>\r\n              <pre style={{ whiteSpace: 'pre-wrap' }}>{result}</pre>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}